rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents { // {database} clause to indicates that these rules apply to all databases in Firestore

    match /{document=**} {
      allow read: if request.auth != null;
			allow create: if request.auth.token.email_verified == true;
      allow update: if request.auth.token.email_verified == true;
      allow delete: if request.auth.token.email_verified == true;
    }

    /** VALIDATION FUNCTIONS **/
    function checkMandatory( prop) {
      return prop != null && prop !="";

    /*
     *  Person
     */

    match /{person}/{document=**}{
      allow create:
          if request.auth.token.email_verified == true
          && request.resource.data.personId != null ? checkMandatory(request.resource.data.personId) : true
          && request.resource.data.personName != null ? checkMandatory(request.resource.data.personName) : true
          && request.resource.data.gender != null ? checkMandatory(request.resource.data.gender) : true
          && request.resource.data.birthDate != null ? checkMandatory(request.resource.data.birthDate) : true
          && request.resource.data.email != null ? checkMandatory(request.resource.data.email) : true
          && request.resource.data.phoneNumber != null ? checkMandatory(request.resource.data.phoneNumber) : true
          && request.resource.data.address != null ? checkMandatory(request.resource.data.address) : true
          && request.resource.data.iban != null ? checkMandatory(request.resource.data.iban) : true
          ;
      
      allow update:
          if request.auth.token.email_verified == true
          && (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role', 'personName', 'gender', 'birthDate', 'email', 'phoneNumber', 'address', 'iban']))
          && request.resource.data.personName != null ? checkMandatory(request.resource.data.personName) : true
          && request.resource.data.gender != null ? checkMandatory(request.resource.data.gender) : true
          && request.resource.data.birthDate != null ? checkMandatory(request.resource.data.birthDate) : true
          && request.resource.data.email != null ? checkMandatory(request.resource.data.email) : true
          && request.resource.data.phoneNumber != null ? checkMandatory(request.resource.data.phoneNumber) : true
          && request.resource.data.address != null ? checkMandatory(request.resource.data.address) : true
          && request.resource.data.iban != null ? checkMandatory(request.resource.data.iban) : true
          ;
          

      allow delete:
          if request.auth.token.email_verified == true;
    }
  }
}
